2025-10-05 13:36:56.982765-05:00 database: opening C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management (build 232)
2025-10-05 13:36:57.159188-05:00 lock: 1 exclusive requesting for SYS 
2025-10-05 13:36:57.159688-05:00 lock: 1 exclusive added for SYS 
2025-10-05 13:36:57.162945-05:00 lock: 1 exclusive unlock SYS 
2025-10-05 13:36:57.166150-05:00 lock: 1 exclusive requesting for SYS 
2025-10-05 13:36:57.166993-05:00 lock: 1 exclusive added for SYS 
2025-10-05 13:36:57.193706-05:00 lock: 1 exclusive unlock SYS 
2025-10-05 13:36:57.194317-05:00 database: opened C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.204650-05:00 lock: 1 exclusive requesting for SYS 
2025-10-05 13:36:57.205139-05:00 lock: 1 exclusive added for SYS 
2025-10-05 13:36:57.208135-05:00 lock: 1 exclusive unlock SYS 
2025-10-05 13:36:57.208635-05:00 database: connecting session #3 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.408079-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:36:57.408079-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:36:57.409078-05:00 jdbc[3]: 
/*SQL t:1*/SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.409576-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:36:57.410087-05:00 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.410747-05:00 jdbc[3]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.416632-05:00 jdbc[3]: 
/**/conn0.isReadOnly();
2025-10-05 13:36:57.425393-05:00 jdbc[3]: 
/*SQL #:1 t:2*/CALL READONLY();
2025-10-05 13:36:57.425892-05:00 jdbc[3]: 
/**/conn0.getAutoCommit();
2025-10-05 13:36:57.434701-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:36:57.434701-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:36:57.434701-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:36:57.467818-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta0 = conn0.getMetaData();
2025-10-05 13:36:57.489014-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseProductName();
2025-10-05 13:36:57.489014-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseProductVersion();
2025-10-05 13:36:57.490515-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMajorVersion();
2025-10-05 13:36:57.491515-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMinorVersion();
2025-10-05 13:36:57.491515-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseProductVersion();
2025-10-05 13:36:57.491515-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMajorVersion();
2025-10-05 13:36:57.492013-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMinorVersion();
2025-10-05 13:36:57.492013-05:00 jdbc[3]: 
/**/dbMeta0.getDriverName();
2025-10-05 13:36:57.492577-05:00 jdbc[3]: 
/**/dbMeta0.getDriverMajorVersion();
2025-10-05 13:36:57.492577-05:00 jdbc[3]: 
/**/dbMeta0.getDriverMinorVersion();
2025-10-05 13:36:57.492577-05:00 jdbc[3]: 
/**/dbMeta0.getSQLKeywords();
2025-10-05 13:36:57.551277-05:00 database: connecting session #4 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.551642-05:00 jdbc[4]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.552305-05:00 jdbc[4]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.552305-05:00 jdbc[4]: 
/**/Connection conn1 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.552642-05:00 jdbc[4]: 
/**/conn1.isReadOnly();
2025-10-05 13:36:57.552642-05:00 jdbc[4]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.553143-05:00 jdbc[4]: 
/**/conn1.getAutoCommit();
2025-10-05 13:36:57.576984-05:00 jdbc[3]: 
/**/dbMeta0.supportsCatalogsInTableDefinitions();
2025-10-05 13:36:57.576984-05:00 jdbc[3]: 
/**/dbMeta0.supportsSchemasInTableDefinitions();
2025-10-05 13:36:57.580065-05:00 jdbc[3]: 
/**/dbMeta0.storesLowerCaseIdentifiers();
2025-10-05 13:36:57.580981-05:00 jdbc[3]: 
/**/dbMeta0.storesUpperCaseIdentifiers();
2025-10-05 13:36:57.586495-05:00 database: connecting session #5 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.587001-05:00 jdbc[5]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.581507-05:00 jdbc[3]: 
/**/dbMeta0.storesMixedCaseIdentifiers();
2025-10-05 13:36:57.587989-05:00 jdbc[5]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.587581-05:00 jdbc[3]: 
/**/dbMeta0.storesUpperCaseIdentifiers();
2025-10-05 13:36:57.587989-05:00 jdbc[5]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.587989-05:00 jdbc[3]: 
/**/dbMeta0.storesLowerCaseQuotedIdentifiers();
2025-10-05 13:36:57.588487-05:00 jdbc[5]: 
/**/conn2.isReadOnly();
2025-10-05 13:36:57.588615-05:00 jdbc[3]: 
/**/dbMeta0.storesUpperCaseQuotedIdentifiers();
2025-10-05 13:36:57.588665-05:00 jdbc[3]: 
/**/dbMeta0.storesMixedCaseQuotedIdentifiers();
2025-10-05 13:36:57.588665-05:00 jdbc[5]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.588982-05:00 jdbc[5]: 
/**/conn2.getAutoCommit();
2025-10-05 13:36:57.590976-05:00 jdbc[3]: 
/**/conn0.getCatalog();
2025-10-05 13:36:57.596673-05:00 jdbc[3]: 
/*SQL #:1*/CALL DATABASE();
2025-10-05 13:36:57.597830-05:00 jdbc[3]: 
/**/dbMeta0.supportsNamedParameters();
2025-10-05 13:36:57.598152-05:00 jdbc[3]: 
/**/dbMeta0.supportsResultSetType(1004);
2025-10-05 13:36:57.598333-05:00 jdbc[3]: 
/**/dbMeta0.supportsGetGeneratedKeys();
2025-10-05 13:36:57.598333-05:00 jdbc[3]: 
/**/dbMeta0.supportsBatchUpdates();
2025-10-05 13:36:57.598653-05:00 jdbc[3]: 
/**/dbMeta0.dataDefinitionIgnoredInTransactions();
2025-10-05 13:36:57.598653-05:00 jdbc[3]: 
/**/dbMeta0.dataDefinitionCausesTransactionCommit();
2025-10-05 13:36:57.598653-05:00 jdbc[3]: 
/**/dbMeta0.getSQLStateType();
2025-10-05 13:36:57.599666-05:00 jdbc[3]: 
/**/conn0.getSchema();
2025-10-05 13:36:57.600669-05:00 jdbc[3]: 
/**/conn0.getSchema();
2025-10-05 13:36:57.600669-05:00 jdbc[3]: 
/**/dbMeta0.supportsNamedParameters();
2025-10-05 13:36:57.606922-05:00 jdbc[3]: 
/**/dbMeta0.getCatalogSeparator();
2025-10-05 13:36:57.607421-05:00 jdbc[3]: 
/**/dbMeta0.isCatalogAtStart();
2025-10-05 13:36:57.611122-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta1 = conn0.getMetaData();
2025-10-05 13:36:57.611660-05:00 jdbc[3]: 
/**/dbMeta1.getJDBCMajorVersion();
2025-10-05 13:36:57.611660-05:00 jdbc[3]: 
/**/Clob clob0 = conn0.createClob();
2025-10-05 13:36:57.621755-05:00 database: connecting session #6 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.622182-05:00 jdbc[6]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.622182-05:00 jdbc[6]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.622728-05:00 jdbc[6]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.622728-05:00 jdbc[6]: 
/**/conn3.isReadOnly();
2025-10-05 13:36:57.623280-05:00 jdbc[6]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.623280-05:00 jdbc[6]: 
/**/conn3.getAutoCommit();
2025-10-05 13:36:57.624176-05:00 jdbc[3]: 
/**/clob0.free();
2025-10-05 13:36:57.624679-05:00 jdbc[3]: 
/**/NClob clob1 = conn0.createNClob();
2025-10-05 13:36:57.624679-05:00 jdbc[3]: 
/**/clob1.free();
2025-10-05 13:36:57.646240-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:36:57.656196-05:00 database: connecting session #7 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.656594-05:00 jdbc[7]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.657195-05:00 jdbc[7]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.657597-05:00 jdbc[7]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.657597-05:00 jdbc[7]: 
/**/conn4.isReadOnly();
2025-10-05 13:36:57.658219-05:00 jdbc[7]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.658598-05:00 jdbc[7]: 
/**/conn4.getAutoCommit();
2025-10-05 13:36:57.691504-05:00 database: connecting session #8 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.692472-05:00 jdbc[8]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.692472-05:00 jdbc[8]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.692973-05:00 jdbc[8]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.692973-05:00 jdbc[8]: 
/**/conn5.isReadOnly();
2025-10-05 13:36:57.693477-05:00 jdbc[8]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.693477-05:00 jdbc[8]: 
/**/conn5.getAutoCommit();
2025-10-05 13:36:57.726096-05:00 database: connecting session #9 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.726491-05:00 jdbc[9]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.727148-05:00 jdbc[9]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.727148-05:00 jdbc[9]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.727148-05:00 jdbc[9]: 
/**/conn6.isReadOnly();
2025-10-05 13:36:57.727772-05:00 jdbc[9]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.727772-05:00 jdbc[9]: 
/**/conn6.getAutoCommit();
2025-10-05 13:36:57.760870-05:00 database: connecting session #10 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.761376-05:00 jdbc[10]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.761876-05:00 jdbc[10]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.761876-05:00 jdbc[10]: 
/**/Connection conn7 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.762377-05:00 jdbc[10]: 
/**/conn7.isReadOnly();
2025-10-05 13:36:57.762377-05:00 jdbc[10]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.762991-05:00 jdbc[10]: 
/**/conn7.getAutoCommit();
2025-10-05 13:36:57.795370-05:00 database: connecting session #11 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.795902-05:00 jdbc[11]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.796070-05:00 jdbc[11]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.796520-05:00 jdbc[11]: 
/**/Connection conn8 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.796520-05:00 jdbc[11]: 
/**/conn8.isReadOnly();
2025-10-05 13:36:57.797008-05:00 jdbc[11]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.797008-05:00 jdbc[11]: 
/**/conn8.getAutoCommit();
2025-10-05 13:36:57.829413-05:00 database: connecting session #12 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:36:57.830035-05:00 jdbc[12]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:36:57.830697-05:00 jdbc[12]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:36:57.830697-05:00 jdbc[12]: 
/**/Connection conn9 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:36:57.830697-05:00 jdbc[12]: 
/**/conn9.isReadOnly();
2025-10-05 13:36:57.831273-05:00 jdbc[12]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:36:57.831593-05:00 jdbc[12]: 
/**/conn9.getAutoCommit();
2025-10-05 13:36:58.255171-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:36:58.255578-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:36:58.258147-05:00 jdbc[3]: 
/**/PreparedStatement prep0 = conn0.prepareStatement("select * from INFORMATION_SCHEMA.SEQUENCES");
2025-10-05 13:36:58.289664-05:00 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-16:org.h2.table.InformationSchemaTable@6fd9dbe6]
2025-10-05 13:36:58.290164-05:00 jdbc[3]: Plan       :   for table filter SEQUENCES:-16:org.h2.table.InformationSchemaTable@6fd9dbe6
2025-10-05 13:36:58.291673-05:00 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2025-10-05 13:36:58.293279-05:00 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2025-10-05 13:36:58.293279-05:00 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2025-10-05 13:36:58.293909-05:00 jdbc[3]: Plan       : plan cost 4,023
2025-10-05 13:36:58.298115-05:00 jdbc[3]: 
/**/ResultSet rs0 = prep0.executeQuery();
2025-10-05 13:36:58.300707-05:00 jdbc[3]: 
/*SQL t:2*/select * from INFORMATION_SCHEMA.SEQUENCES;
2025-10-05 13:36:58.316940-05:00 jdbc[3]: 
/**/rs0.next();
2025-10-05 13:36:58.317276-05:00 jdbc[3]: 
/**/rs0.close();
2025-10-05 13:36:58.317276-05:00 jdbc[3]: 
/**/prep0.close();
2025-10-05 13:36:58.317772-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:36:59.866390-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:36:59.867004-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:36:59.874393-05:00 jdbc[3]: 
/**/Statement stat0 = conn0.createStatement();
2025-10-05 13:36:59.875890-05:00 jdbc[3]: 
/**/stat0.executeUpdate("create global temporary table HTE_user(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL");
2025-10-05 13:36:59.882722-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:36:59.883118-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:36:59.883771-05:00 lock: 3 exclusive requesting for HTE_USER 
2025-10-05 13:36:59.884271-05:00 lock: 3 exclusive added for HTE_USER 
2025-10-05 13:36:59.886188-05:00 jdbc[3]: 
/*SQL t:3*/create global temporary table HTE_user(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL;
2025-10-05 13:36:59.886778-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:36:59.886778-05:00 lock: 3 exclusive unlock HTE_USER 
2025-10-05 13:36:59.887175-05:00 jdbc[3]: 
/**/stat0.getWarnings();
2025-10-05 13:36:59.887175-05:00 jdbc[3]: 
/**/stat0.clearWarnings();
2025-10-05 13:36:59.887175-05:00 jdbc[3]: 
/**/stat0.close();
2025-10-05 13:36:59.887175-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:36:59.887675-05:00 jdbc[3]: 
/**/Statement stat1 = conn0.createStatement();
2025-10-05 13:36:59.887675-05:00 jdbc[3]: 
/**/stat1.executeUpdate("create global temporary table HTE_contact(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL");
2025-10-05 13:36:59.888286-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:36:59.888675-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:36:59.889176-05:00 lock: 3 exclusive requesting for HTE_CONTACT 
2025-10-05 13:36:59.889680-05:00 lock: 3 exclusive added for HTE_CONTACT 
2025-10-05 13:36:59.889680-05:00 jdbc[3]: 
/*SQL t:1*/create global temporary table HTE_contact(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL;
2025-10-05 13:36:59.890182-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:36:59.890182-05:00 lock: 3 exclusive unlock HTE_CONTACT 
2025-10-05 13:36:59.890682-05:00 jdbc[3]: 
/**/stat1.getWarnings();
2025-10-05 13:36:59.890682-05:00 jdbc[3]: 
/**/stat1.clearWarnings();
2025-10-05 13:36:59.890682-05:00 jdbc[3]: 
/**/stat1.close();
2025-10-05 13:36:59.890682-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:00.295688-05:00 jdbc[3]: 
/**/conn0.getAutoCommit();
2025-10-05 13:37:00.296731-05:00 jdbc[3]: 
/**/PreparedStatement prep1 = conn0.prepareStatement("select * from INFORMATION_SCHEMA.SEQUENCES");
2025-10-05 13:37:00.296731-05:00 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-16:org.h2.table.InformationSchemaTable@6fd9dbe6]
2025-10-05 13:37:00.296731-05:00 jdbc[3]: Plan       :   for table filter SEQUENCES:-16:org.h2.table.InformationSchemaTable@6fd9dbe6
2025-10-05 13:37:00.297720-05:00 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2025-10-05 13:37:00.298201-05:00 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2025-10-05 13:37:00.298201-05:00 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2025-10-05 13:37:00.298201-05:00 jdbc[3]: Plan       : plan cost 4,023
2025-10-05 13:37:00.298861-05:00 jdbc[3]: 
/**/ResultSet rs1 = prep1.executeQuery();
2025-10-05 13:37:00.302835-05:00 jdbc[3]: 
/*SQL */select * from INFORMATION_SCHEMA.SEQUENCES;
2025-10-05 13:37:00.303403-05:00 jdbc[3]: 
/**/rs1.next();
2025-10-05 13:37:00.303904-05:00 jdbc[3]: 
/**/rs1.close();
2025-10-05 13:37:00.303904-05:00 jdbc[3]: 
/**/prep1.close();
2025-10-05 13:37:00.320855-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta2 = conn0.getMetaData();
2025-10-05 13:37:00.321356-05:00 jdbc[3]: 
/**/dbMeta2.getTables("CONTACT_MANAGEMENT", "PUBLIC", "%", new String[]{"TABLE", "VIEW", "BASE TABLE"});
2025-10-05 13:37:00.325737-05:00 jdbc[3]: 
/**/rs2.getStatement();
2025-10-05 13:37:00.325737-05:00 jdbc[3]: 
/**/rs2.next();
2025-10-05 13:37:00.328181-05:00 jdbc[3]: 
/**/dbMeta2.getColumns("CONTACT_MANAGEMENT", "PUBLIC", null, "%");
2025-10-05 13:37:00.328788-05:00 jdbc[3]: 
/**/rs3.getStatement();
2025-10-05 13:37:00.328788-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:00.328788-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:00.333896-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:00.334894-05:00 jdbc[3]: 
/**/rs3.close();
2025-10-05 13:37:00.334894-05:00 jdbc[3]: 
/**/rs2.close();
2025-10-05 13:37:00.340696-05:00 jdbc[3]: 
/**/Statement stat2 = conn0.createStatement();
2025-10-05 13:37:00.340696-05:00 jdbc[3]: 
/**/stat2.execute("create table contact (id bigint not null, primary key (id))");
2025-10-05 13:37:00.341714-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:37:00.341873-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:37:00.344768-05:00 lock: 3 exclusive requesting for CONTACT 
2025-10-05 13:37:00.345194-05:00 lock: 3 exclusive added for CONTACT 
2025-10-05 13:37:00.346278-05:00 jdbc[3]: 
/*SQL t:5*/create table contact (id bigint not null, primary key (id));
2025-10-05 13:37:00.347201-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:37:00.347201-05:00 lock: 3 exclusive unlock CONTACT 
2025-10-05 13:37:00.347702-05:00 jdbc[3]: 
/**/stat2.getWarnings();
2025-10-05 13:37:00.347702-05:00 jdbc[3]: 
/**/stat2.execute("create table user (id bigint not null, primary key (id))");
2025-10-05 13:37:00.351989-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (id bigint not null, primary key (id))"; expected "identifier"; SQL statement:
create table user (id bigint not null, primary key (id)) [42001-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5527)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5487)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5516)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8801)
	at org.h2.command.Parser.parseCreate(Parser.java:6398)
	at org.h2.command.Parser.parsePrepared(Parser.java:645)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:316)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.josephadogeri.contact_management_app.ContactManagementAppApplication.main(ContactManagementAppApplication.java:10)
2025-10-05 13:37:00.379154-05:00 jdbc[3]: 
/**/stat2.execute("create sequence contact_seq start with 1 increment by 50");
2025-10-05 13:37:00.385729-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:37:00.386230-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:37:00.386729-05:00 jdbc[3]: 
/*SQL t:2*/create sequence contact_seq start with 1 increment by 50;
2025-10-05 13:37:00.387231-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:37:00.387231-05:00 jdbc[3]: 
/**/stat2.getWarnings();
2025-10-05 13:37:00.387231-05:00 jdbc[3]: 
/**/stat2.execute("create sequence user_seq start with 1 increment by 50");
2025-10-05 13:37:00.387733-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:37:00.388235-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:37:00.388235-05:00 jdbc[3]: 
/*SQL */create sequence user_seq start with 1 increment by 50;
2025-10-05 13:37:00.388731-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:37:00.388731-05:00 jdbc[3]: 
/**/stat2.getWarnings();
2025-10-05 13:37:00.388731-05:00 jdbc[3]: 
/**/stat2.close();
2025-10-05 13:37:00.389230-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:01.431049-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:37:01.431578-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:37:01.431578-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta3 = conn0.getMetaData();
2025-10-05 13:37:01.432078-05:00 jdbc[3]: 
/**/dbMeta3.getURL();
2025-10-05 13:37:01.433078-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:27.103858-05:00 database: closing C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management from shutdown hook
2025-10-05 13:37:27.104262-05:00 lock: 3 shared read unlock SYS 
2025-10-05 13:37:27.104739-05:00 database: disconnecting session #3
2025-10-05 13:37:27.105069-05:00 database: disconnected session #3
2025-10-05 13:37:27.105256-05:00 lock: 4 shared read unlock SYS 
2025-10-05 13:37:27.105256-05:00 database: disconnecting session #4
2025-10-05 13:37:27.105256-05:00 database: disconnected session #4
2025-10-05 13:37:27.107439-05:00 lock: 5 shared read unlock SYS 
2025-10-05 13:37:27.107439-05:00 database: disconnecting session #5
2025-10-05 13:37:27.107439-05:00 database: disconnected session #5
2025-10-05 13:37:27.107939-05:00 lock: 6 shared read unlock SYS 
2025-10-05 13:37:27.107939-05:00 database: disconnecting session #6
2025-10-05 13:37:27.108463-05:00 database: disconnected session #6
2025-10-05 13:37:27.108463-05:00 lock: 7 shared read unlock SYS 
2025-10-05 13:37:27.108939-05:00 database: disconnecting session #7
2025-10-05 13:37:27.109003-05:00 database: disconnected session #7
2025-10-05 13:37:27.109003-05:00 lock: 8 shared read unlock SYS 
2025-10-05 13:37:27.109440-05:00 database: disconnecting session #8
2025-10-05 13:37:27.109440-05:00 database: disconnected session #8
2025-10-05 13:37:27.109946-05:00 lock: 9 shared read unlock SYS 
2025-10-05 13:37:27.109946-05:00 database: disconnecting session #9
2025-10-05 13:37:27.109946-05:00 database: disconnected session #9
2025-10-05 13:37:27.109946-05:00 lock: 10 shared read unlock SYS 
2025-10-05 13:37:27.109946-05:00 database: disconnecting session #10
2025-10-05 13:37:27.110812-05:00 database: disconnected session #10
2025-10-05 13:37:27.110812-05:00 lock: 11 shared read unlock SYS 
2025-10-05 13:37:27.111311-05:00 database: disconnecting session #11
2025-10-05 13:37:27.111375-05:00 database: disconnected session #11
2025-10-05 13:37:27.111375-05:00 lock: 12 shared read unlock SYS 
2025-10-05 13:37:27.111375-05:00 database: disconnecting session #12
2025-10-05 13:37:27.111874-05:00 database: closing C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:27.112146-05:00 lock: 1 exclusive requesting for SYS 
2025-10-05 13:37:27.112146-05:00 lock: 1 exclusive added for SYS 
2025-10-05 13:37:27.114319-05:00 lock: 1 exclusive unlock SYS 
2025-10-05 13:37:27.114881-05:00 lock: 2 shared read unlock SYS 
2025-10-05 13:37:27.114881-05:00 lock: 1 shared read unlock SYS 
2025-10-05 13:37:27.130790-05:00 database: closed
2025-10-05 13:37:27.154806-05:00 jdbc[3]: 
/**/conn0.isClosed();
2025-10-05 13:37:27.170996-05:00 jdbc[3]: 
/**/conn0.close();
2025-10-05 13:37:27.177170-05:00 jdbc[4]: 
/**/conn1.isClosed();
2025-10-05 13:37:27.182735-05:00 jdbc[4]: 
/**/conn1.close();
2025-10-05 13:37:27.187738-05:00 jdbc[5]: 
/**/conn2.isClosed();
2025-10-05 13:37:27.192737-05:00 jdbc[5]: 
/**/conn2.close();
2025-10-05 13:37:27.221130-05:00 jdbc[6]: 
/**/conn3.isClosed();
2025-10-05 13:37:27.233909-05:00 jdbc[6]: 
/**/conn3.close();
2025-10-05 13:37:27.239393-05:00 jdbc[7]: 
/**/conn4.isClosed();
2025-10-05 13:37:27.249820-05:00 jdbc[7]: 
/**/conn4.close();
2025-10-05 13:37:27.257870-05:00 jdbc[8]: 
/**/conn5.isClosed();
2025-10-05 13:37:27.266514-05:00 jdbc[8]: 
/**/conn5.close();
2025-10-05 13:37:27.273175-05:00 jdbc[9]: 
/**/conn6.isClosed();
2025-10-05 13:37:27.286145-05:00 jdbc[9]: 
/**/conn6.close();
2025-10-05 13:37:27.291061-05:00 jdbc[10]: 
/**/conn7.isClosed();
2025-10-05 13:37:27.303789-05:00 jdbc[10]: 
/**/conn7.close();
2025-10-05 13:37:27.309477-05:00 jdbc[11]: 
/**/conn8.isClosed();
2025-10-05 13:37:27.324970-05:00 jdbc[11]: 
/**/conn8.close();
2025-10-05 13:37:27.342290-05:00 jdbc[12]: 
/**/conn9.isClosed();
2025-10-05 13:37:27.361303-05:00 jdbc[12]: 
/**/conn9.close();
2025-10-05 13:37:41.923458-05:00 database: opening C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management (build 232)
2025-10-05 13:37:42.088277-05:00 lock: 1 exclusive requesting for SYS 
2025-10-05 13:37:42.088880-05:00 lock: 1 exclusive added for SYS 
2025-10-05 13:37:42.255578-05:00 lock: 1 exclusive requesting for CONTACT 
2025-10-05 13:37:42.256392-05:00 lock: 1 exclusive added for CONTACT 
2025-10-05 13:37:42.263081-05:00 lock: 1 exclusive unlock SYS 
2025-10-05 13:37:42.263582-05:00 lock: 1 exclusive unlock CONTACT 
2025-10-05 13:37:42.273111-05:00 database: opened C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.275404-05:00 database: connecting session #3 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.280581-05:00 jdbc[3]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.281238-05:00 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.284129-05:00 jdbc[3]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.285624-05:00 jdbc[3]: 
/**/conn0.isReadOnly();
2025-10-05 13:37:42.293619-05:00 jdbc[3]: 
/*SQL #:1 t:1*/CALL READONLY();
2025-10-05 13:37:42.294141-05:00 jdbc[3]: 
/**/conn0.getAutoCommit();
2025-10-05 13:37:42.297268-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:37:42.297697-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:37:42.297844-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:37:42.312136-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta0 = conn0.getMetaData();
2025-10-05 13:37:42.321275-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseProductName();
2025-10-05 13:37:42.321275-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseProductVersion();
2025-10-05 13:37:42.323398-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMajorVersion();
2025-10-05 13:37:42.323398-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMinorVersion();
2025-10-05 13:37:42.323857-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseProductVersion();
2025-10-05 13:37:42.323944-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMajorVersion();
2025-10-05 13:37:42.323944-05:00 jdbc[3]: 
/**/dbMeta0.getDatabaseMinorVersion();
2025-10-05 13:37:42.324331-05:00 jdbc[3]: 
/**/dbMeta0.getDriverName();
2025-10-05 13:37:42.324331-05:00 jdbc[3]: 
/**/dbMeta0.getDriverMajorVersion();
2025-10-05 13:37:42.324331-05:00 jdbc[3]: 
/**/dbMeta0.getDriverMinorVersion();
2025-10-05 13:37:42.324832-05:00 jdbc[3]: 
/**/dbMeta0.getSQLKeywords();
2025-10-05 13:37:42.375414-05:00 jdbc[3]: 
/**/dbMeta0.supportsCatalogsInTableDefinitions();
2025-10-05 13:37:42.375915-05:00 jdbc[3]: 
/**/dbMeta0.supportsSchemasInTableDefinitions();
2025-10-05 13:37:42.381245-05:00 jdbc[3]: 
/**/dbMeta0.storesLowerCaseIdentifiers();
2025-10-05 13:37:42.382129-05:00 jdbc[3]: 
/**/dbMeta0.storesUpperCaseIdentifiers();
2025-10-05 13:37:42.382129-05:00 jdbc[3]: 
/**/dbMeta0.storesMixedCaseIdentifiers();
2025-10-05 13:37:42.382129-05:00 jdbc[3]: 
/**/dbMeta0.storesUpperCaseIdentifiers();
2025-10-05 13:37:42.382627-05:00 jdbc[3]: 
/**/dbMeta0.storesLowerCaseQuotedIdentifiers();
2025-10-05 13:37:42.382733-05:00 jdbc[3]: 
/**/dbMeta0.storesUpperCaseQuotedIdentifiers();
2025-10-05 13:37:42.382733-05:00 jdbc[3]: 
/**/dbMeta0.storesMixedCaseQuotedIdentifiers();
2025-10-05 13:37:42.384563-05:00 jdbc[3]: 
/**/conn0.getCatalog();
2025-10-05 13:37:42.390012-05:00 jdbc[3]: 
/*SQL #:1*/CALL DATABASE();
2025-10-05 13:37:42.390989-05:00 jdbc[3]: 
/**/dbMeta0.supportsNamedParameters();
2025-10-05 13:37:42.391526-05:00 jdbc[3]: 
/**/dbMeta0.supportsResultSetType(1004);
2025-10-05 13:37:42.391990-05:00 jdbc[3]: 
/**/dbMeta0.supportsGetGeneratedKeys();
2025-10-05 13:37:42.391990-05:00 jdbc[3]: 
/**/dbMeta0.supportsBatchUpdates();
2025-10-05 13:37:42.391990-05:00 jdbc[3]: 
/**/dbMeta0.dataDefinitionIgnoredInTransactions();
2025-10-05 13:37:42.391990-05:00 jdbc[3]: 
/**/dbMeta0.dataDefinitionCausesTransactionCommit();
2025-10-05 13:37:42.392489-05:00 jdbc[3]: 
/**/dbMeta0.getSQLStateType();
2025-10-05 13:37:42.393988-05:00 jdbc[3]: 
/**/conn0.getSchema();
2025-10-05 13:37:42.395006-05:00 jdbc[3]: 
/**/conn0.getSchema();
2025-10-05 13:37:42.395630-05:00 jdbc[3]: 
/**/dbMeta0.supportsNamedParameters();
2025-10-05 13:37:42.399734-05:00 jdbc[3]: 
/**/dbMeta0.getCatalogSeparator();
2025-10-05 13:37:42.399734-05:00 jdbc[3]: 
/**/dbMeta0.isCatalogAtStart();
2025-10-05 13:37:42.404783-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta1 = conn0.getMetaData();
2025-10-05 13:37:42.405270-05:00 jdbc[3]: 
/**/dbMeta1.getJDBCMajorVersion();
2025-10-05 13:37:42.405390-05:00 jdbc[3]: 
/**/Clob clob0 = conn0.createClob();
2025-10-05 13:37:42.407760-05:00 database: connecting session #4 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.408435-05:00 jdbc[4]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.408758-05:00 jdbc[4]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.409331-05:00 jdbc[4]: 
/**/Connection conn1 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.409331-05:00 jdbc[4]: 
/**/conn1.isReadOnly();
2025-10-05 13:37:42.409837-05:00 jdbc[4]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.410078-05:00 jdbc[4]: 
/**/conn1.getAutoCommit();
2025-10-05 13:37:42.414089-05:00 jdbc[3]: 
/**/clob0.free();
2025-10-05 13:37:42.414574-05:00 jdbc[3]: 
/**/NClob clob1 = conn0.createNClob();
2025-10-05 13:37:42.414574-05:00 jdbc[3]: 
/**/clob1.free();
2025-10-05 13:37:42.428842-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:42.442688-05:00 database: connecting session #5 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.443345-05:00 jdbc[5]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.444010-05:00 jdbc[5]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.444517-05:00 jdbc[5]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.444517-05:00 jdbc[5]: 
/**/conn2.isReadOnly();
2025-10-05 13:37:42.444687-05:00 jdbc[5]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.444687-05:00 jdbc[5]: 
/**/conn2.getAutoCommit();
2025-10-05 13:37:42.477058-05:00 database: connecting session #6 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.477058-05:00 jdbc[6]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.477058-05:00 jdbc[6]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.478069-05:00 jdbc[6]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.478069-05:00 jdbc[6]: 
/**/conn3.isReadOnly();
2025-10-05 13:37:42.478069-05:00 jdbc[6]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.479068-05:00 jdbc[6]: 
/**/conn3.getAutoCommit();
2025-10-05 13:37:42.511092-05:00 database: connecting session #7 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.511966-05:00 jdbc[7]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.512599-05:00 jdbc[7]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.513535-05:00 jdbc[7]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.514036-05:00 jdbc[7]: 
/**/conn4.isReadOnly();
2025-10-05 13:37:42.516143-05:00 jdbc[7]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.516143-05:00 jdbc[7]: 
/**/conn4.getAutoCommit();
2025-10-05 13:37:42.549780-05:00 database: connecting session #8 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.550803-05:00 jdbc[8]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.550803-05:00 jdbc[8]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.551253-05:00 jdbc[8]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.551253-05:00 jdbc[8]: 
/**/conn5.isReadOnly();
2025-10-05 13:37:42.551752-05:00 jdbc[8]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.551752-05:00 jdbc[8]: 
/**/conn5.getAutoCommit();
2025-10-05 13:37:42.584167-05:00 database: connecting session #9 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.584690-05:00 jdbc[9]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.585096-05:00 jdbc[9]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.586094-05:00 jdbc[9]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.586094-05:00 jdbc[9]: 
/**/conn6.isReadOnly();
2025-10-05 13:37:42.586699-05:00 jdbc[9]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.586699-05:00 jdbc[9]: 
/**/conn6.getAutoCommit();
2025-10-05 13:37:42.620073-05:00 database: connecting session #10 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.620573-05:00 jdbc[10]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.621073-05:00 jdbc[10]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.621319-05:00 jdbc[10]: 
/**/Connection conn7 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.621571-05:00 jdbc[10]: 
/**/conn7.isReadOnly();
2025-10-05 13:37:42.621571-05:00 jdbc[10]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.622090-05:00 jdbc[10]: 
/**/conn7.getAutoCommit();
2025-10-05 13:37:42.654936-05:00 database: connecting session #11 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.655375-05:00 jdbc[11]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.655375-05:00 jdbc[11]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.655912-05:00 jdbc[11]: 
/**/Connection conn8 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.655912-05:00 jdbc[11]: 
/**/conn8.isReadOnly();
2025-10-05 13:37:42.656489-05:00 jdbc[11]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.656489-05:00 jdbc[11]: 
/**/conn8.getAutoCommit();
2025-10-05 13:37:42.689788-05:00 database: connecting session #12 to C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:37:42.690276-05:00 jdbc[12]: 
/*SQL */SET DB_CLOSE_DELAY -1;
2025-10-05 13:37:42.690775-05:00 jdbc[12]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2025-10-05 13:37:42.690775-05:00 jdbc[12]: 
/**/Connection conn9 = DriverManager.getConnection("jdbc:h2:file:./data/contact_management;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=3", "SPRING", "");
2025-10-05 13:37:42.692274-05:00 jdbc[12]: 
/**/conn9.isReadOnly();
2025-10-05 13:37:42.692374-05:00 jdbc[12]: 
/*SQL #:1*/CALL READONLY();
2025-10-05 13:37:42.692775-05:00 jdbc[12]: 
/**/conn9.getAutoCommit();
2025-10-05 13:37:42.897518-05:00 jdbc[3]: 
/**/PreparedStatement prep0 = conn0.prepareStatement("select * from INFORMATION_SCHEMA.SEQUENCES");
2025-10-05 13:37:42.937925-05:00 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-16:org.h2.table.InformationSchemaTable@592cb470]
2025-10-05 13:37:42.938425-05:00 jdbc[3]: Plan       :   for table filter SEQUENCES:-16:org.h2.table.InformationSchemaTable@592cb470
2025-10-05 13:37:42.939925-05:00 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2025-10-05 13:37:42.940493-05:00 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2025-10-05 13:37:42.941163-05:00 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2025-10-05 13:37:42.941670-05:00 jdbc[3]: Plan       : plan cost 4,023
2025-10-05 13:37:42.949824-05:00 jdbc[3]: 
/**/ResultSet rs0 = prep0.executeQuery();
2025-10-05 13:37:42.954362-05:00 jdbc[3]: 
/*SQL #:2 t:3*/select * from INFORMATION_SCHEMA.SEQUENCES;
2025-10-05 13:37:42.971583-05:00 jdbc[3]: 
/**/rs0.next();
2025-10-05 13:37:42.974664-05:00 jdbc[3]: 
/**/rs0.getString("sequence_catalog");
2025-10-05 13:37:42.975342-05:00 jdbc[3]: 
/**/rs0.getString("sequence_schema");
2025-10-05 13:37:42.975342-05:00 jdbc[3]: 
/**/rs0.getString("sequence_name");
2025-10-05 13:37:42.975664-05:00 jdbc[3]: 
/**/rs0.getLong("start_value");
2025-10-05 13:37:42.975664-05:00 jdbc[3]: 
/**/rs0.getLong("minimum_value");
2025-10-05 13:37:42.975664-05:00 jdbc[3]: 
/**/rs0.getLong("maximum_value");
2025-10-05 13:37:42.975664-05:00 jdbc[3]: 
/**/rs0.getLong("increment");
2025-10-05 13:37:42.975664-05:00 jdbc[3]: 
/**/rs0.next();
2025-10-05 13:37:42.976164-05:00 jdbc[3]: 
/**/rs0.getString("sequence_catalog");
2025-10-05 13:37:42.976285-05:00 jdbc[3]: 
/**/rs0.getString("sequence_schema");
2025-10-05 13:37:42.976285-05:00 jdbc[3]: 
/**/rs0.getString("sequence_name");
2025-10-05 13:37:42.976285-05:00 jdbc[3]: 
/**/rs0.getLong("start_value");
2025-10-05 13:37:42.976285-05:00 jdbc[3]: 
/**/rs0.getLong("minimum_value");
2025-10-05 13:37:42.976696-05:00 jdbc[3]: 
/**/rs0.getLong("maximum_value");
2025-10-05 13:37:42.976742-05:00 jdbc[3]: 
/**/rs0.getLong("increment");
2025-10-05 13:37:42.976742-05:00 jdbc[3]: 
/**/rs0.next();
2025-10-05 13:37:42.976742-05:00 jdbc[3]: 
/**/rs0.close();
2025-10-05 13:37:42.976742-05:00 jdbc[3]: 
/**/prep0.close();
2025-10-05 13:37:42.977163-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:44.327106-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:37:44.327106-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:37:44.344021-05:00 jdbc[3]: 
/**/Statement stat0 = conn0.createStatement();
2025-10-05 13:37:44.345520-05:00 jdbc[3]: 
/**/stat0.executeUpdate("create global temporary table HTE_user(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL");
2025-10-05 13:37:44.346522-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:37:44.346522-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:37:44.347522-05:00 lock: 3 exclusive requesting for HTE_USER 
2025-10-05 13:37:44.347737-05:00 lock: 3 exclusive added for HTE_USER 
2025-10-05 13:37:44.348384-05:00 jdbc[3]: 
/*SQL t:2*/create global temporary table HTE_user(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL;
2025-10-05 13:37:44.348805-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:37:44.348805-05:00 lock: 3 exclusive unlock HTE_USER 
2025-10-05 13:37:44.349253-05:00 jdbc[3]: 
/**/stat0.getWarnings();
2025-10-05 13:37:44.349334-05:00 jdbc[3]: 
/**/stat0.clearWarnings();
2025-10-05 13:37:44.349334-05:00 jdbc[3]: 
/**/stat0.close();
2025-10-05 13:37:44.349334-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:44.349838-05:00 jdbc[3]: 
/**/Statement stat1 = conn0.createStatement();
2025-10-05 13:37:44.350288-05:00 jdbc[3]: 
/**/stat1.executeUpdate("create global temporary table HTE_contact(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL");
2025-10-05 13:37:44.351753-05:00 lock: 3 exclusive requesting for SYS 
2025-10-05 13:37:44.353747-05:00 lock: 3 exclusive added for SYS 
2025-10-05 13:37:44.354771-05:00 lock: 3 exclusive requesting for HTE_CONTACT 
2025-10-05 13:37:44.355247-05:00 lock: 3 exclusive added for HTE_CONTACT 
2025-10-05 13:37:44.355247-05:00 jdbc[3]: 
/*SQL t:3*/create global temporary table HTE_contact(rn_ integer not null, id bigint, primary key (rn_)) TRANSACTIONAL;
2025-10-05 13:37:44.355747-05:00 lock: 3 exclusive unlock SYS 
2025-10-05 13:37:44.356442-05:00 lock: 3 exclusive unlock HTE_CONTACT 
2025-10-05 13:37:44.356442-05:00 jdbc[3]: 
/**/stat1.getWarnings();
2025-10-05 13:37:44.356822-05:00 jdbc[3]: 
/**/stat1.clearWarnings();
2025-10-05 13:37:44.356822-05:00 jdbc[3]: 
/**/stat1.close();
2025-10-05 13:37:44.357247-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:44.665540-05:00 jdbc[3]: 
/**/conn0.getAutoCommit();
2025-10-05 13:37:44.665540-05:00 jdbc[3]: 
/**/PreparedStatement prep1 = conn0.prepareStatement("select * from INFORMATION_SCHEMA.SEQUENCES");
2025-10-05 13:37:44.666139-05:00 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-16:org.h2.table.InformationSchemaTable@592cb470]
2025-10-05 13:37:44.666534-05:00 jdbc[3]: Plan       :   for table filter SEQUENCES:-16:org.h2.table.InformationSchemaTable@592cb470
2025-10-05 13:37:44.666534-05:00 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2025-10-05 13:37:44.667063-05:00 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2025-10-05 13:37:44.667063-05:00 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2025-10-05 13:37:44.667539-05:00 jdbc[3]: Plan       : plan cost 4,023
2025-10-05 13:37:44.667539-05:00 jdbc[3]: 
/**/ResultSet rs1 = prep1.executeQuery();
2025-10-05 13:37:44.668191-05:00 jdbc[3]: 
/*SQL #:2*/select * from INFORMATION_SCHEMA.SEQUENCES;
2025-10-05 13:37:44.668533-05:00 jdbc[3]: 
/**/rs1.next();
2025-10-05 13:37:44.668533-05:00 jdbc[3]: 
/**/rs1.getString("sequence_catalog");
2025-10-05 13:37:44.669033-05:00 jdbc[3]: 
/**/rs1.getString("sequence_schema");
2025-10-05 13:37:44.669033-05:00 jdbc[3]: 
/**/rs1.getString("sequence_name");
2025-10-05 13:37:44.669033-05:00 jdbc[3]: 
/**/rs1.getLong("start_value");
2025-10-05 13:37:44.670630-05:00 jdbc[3]: 
/**/rs1.getLong("minimum_value");
2025-10-05 13:37:44.671038-05:00 jdbc[3]: 
/**/rs1.getLong("maximum_value");
2025-10-05 13:37:44.671038-05:00 jdbc[3]: 
/**/rs1.getLong("increment");
2025-10-05 13:37:44.671038-05:00 jdbc[3]: 
/**/rs1.next();
2025-10-05 13:37:44.671038-05:00 jdbc[3]: 
/**/rs1.getString("sequence_catalog");
2025-10-05 13:37:44.672039-05:00 jdbc[3]: 
/**/rs1.getString("sequence_schema");
2025-10-05 13:37:44.672538-05:00 jdbc[3]: 
/**/rs1.getString("sequence_name");
2025-10-05 13:37:44.672538-05:00 jdbc[3]: 
/**/rs1.getLong("start_value");
2025-10-05 13:37:44.672538-05:00 jdbc[3]: 
/**/rs1.getLong("minimum_value");
2025-10-05 13:37:44.672538-05:00 jdbc[3]: 
/**/rs1.getLong("maximum_value");
2025-10-05 13:37:44.673040-05:00 jdbc[3]: 
/**/rs1.getLong("increment");
2025-10-05 13:37:44.673040-05:00 jdbc[3]: 
/**/rs1.next();
2025-10-05 13:37:44.673040-05:00 jdbc[3]: 
/**/rs1.close();
2025-10-05 13:37:44.673040-05:00 jdbc[3]: 
/**/prep1.close();
2025-10-05 13:37:44.684308-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta2 = conn0.getMetaData();
2025-10-05 13:37:44.684430-05:00 jdbc[3]: 
/**/dbMeta2.getTables("CONTACT_MANAGEMENT", "PUBLIC", "%", new String[]{"TABLE", "VIEW", "BASE TABLE"});
2025-10-05 13:37:44.693626-05:00 jdbc[3]: 
/**/rs2.getStatement();
2025-10-05 13:37:44.693879-05:00 jdbc[3]: 
/**/rs2.next();
2025-10-05 13:37:44.693879-05:00 jdbc[3]: 
/**/rs2.getString("TABLE_CAT");
2025-10-05 13:37:44.694124-05:00 jdbc[3]: 
/**/rs2.getString("TABLE_SCHEM");
2025-10-05 13:37:44.694124-05:00 jdbc[3]: 
/**/rs2.getString("TABLE_NAME");
2025-10-05 13:37:44.695126-05:00 jdbc[3]: 
/**/rs2.getString("TABLE_TYPE");
2025-10-05 13:37:44.695760-05:00 jdbc[3]: 
/**/rs2.getString("REMARKS");
2025-10-05 13:37:44.695760-05:00 jdbc[3]: 
/**/rs2.next();
2025-10-05 13:37:44.696651-05:00 jdbc[3]: 
/**/dbMeta2.getColumns("CONTACT_MANAGEMENT", "PUBLIC", null, "%");
2025-10-05 13:37:44.697130-05:00 jdbc[3]: 
/**/rs3.getStatement();
2025-10-05 13:37:44.697130-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:44.697629-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.697629-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.698131-05:00 jdbc[3]: 
/**/rs3.getString("COLUMN_NAME");
2025-10-05 13:37:44.698630-05:00 jdbc[3]: 
/**/rs3.getInt("DATA_TYPE");
2025-10-05 13:37:44.698630-05:00 jdbc[3]: 
/**/rs3.getString("TYPE_NAME");
2025-10-05 13:37:44.698630-05:00 jdbc[3]: 
/**/rs3.getInt("COLUMN_SIZE");
2025-10-05 13:37:44.698630-05:00 jdbc[3]: 
/**/rs3.getInt("DECIMAL_DIGITS");
2025-10-05 13:37:44.698630-05:00 jdbc[3]: 
/**/rs3.getString("IS_NULLABLE");
2025-10-05 13:37:44.699130-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:44.699130-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.699130-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.699130-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:44.699624-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.699624-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:44.699624-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.699624-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.699624-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:44.700124-05:00 jdbc[3]: 
/**/rs3.getString("TABLE_NAME");
2025-10-05 13:37:44.700124-05:00 jdbc[3]: 
/**/rs3.next();
2025-10-05 13:37:44.700124-05:00 jdbc[3]: 
/**/rs3.close();
2025-10-05 13:37:44.700124-05:00 jdbc[3]: 
/**/rs2.close();
2025-10-05 13:37:44.710672-05:00 jdbc[3]: 
/**/Statement stat2 = conn0.createStatement();
2025-10-05 13:37:44.710672-05:00 jdbc[3]: 
/**/stat2.execute("create table user (id bigint not null, primary key (id))");
2025-10-05 13:37:44.714576-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (id bigint not null, primary key (id))"; expected "identifier"; SQL statement:
create table user (id bigint not null, primary key (id)) [42001-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5527)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5487)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5516)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8801)
	at org.h2.command.Parser.parseCreate(Parser.java:6398)
	at org.h2.command.Parser.parsePrepared(Parser.java:645)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:316)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.josephadogeri.contact_management_app.ContactManagementAppApplication.main(ContactManagementAppApplication.java:10)
2025-10-05 13:37:44.732579-05:00 jdbc[3]: 
/**/stat2.close();
2025-10-05 13:37:44.733079-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:37:45.672363-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:37:45.672950-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:37:45.672950-05:00 jdbc[3]: 
/**/DatabaseMetaData dbMeta3 = conn0.getMetaData();
2025-10-05 13:37:45.672950-05:00 jdbc[3]: 
/**/dbMeta3.getURL();
2025-10-05 13:37:45.673434-05:00 jdbc[3]: 
/**/conn0.clearWarnings();
2025-10-05 13:39:19.696140-05:00 jdbc[10]: 
/**/conn7.isValid(5);
2025-10-05 13:39:19.696511-05:00 jdbc[10]: 
/**/conn7.getTransactionIsolation();
2025-10-05 13:39:24.731676-05:00 jdbc[6]: 
/**/conn3.isValid(5);
2025-10-05 13:39:24.731676-05:00 jdbc[6]: 
/**/conn3.getTransactionIsolation();
2025-10-05 13:39:25.254037-05:00 jdbc[11]: 
/**/conn8.isValid(5);
2025-10-05 13:39:25.254523-05:00 jdbc[11]: 
/**/conn8.getTransactionIsolation();
2025-10-05 13:39:26.584262-05:00 jdbc[9]: 
/**/conn6.isValid(5);
2025-10-05 13:39:26.584262-05:00 jdbc[9]: 
/**/conn6.getTransactionIsolation();
2025-10-05 13:39:27.029353-05:00 jdbc[4]: 
/**/conn1.isValid(5);
2025-10-05 13:39:27.029353-05:00 jdbc[4]: 
/**/conn1.getTransactionIsolation();
2025-10-05 13:39:27.719054-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:39:27.719054-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:39:29.791896-05:00 jdbc[8]: 
/**/conn5.isValid(5);
2025-10-05 13:39:29.791896-05:00 jdbc[8]: 
/**/conn5.getTransactionIsolation();
2025-10-05 13:39:30.810646-05:00 jdbc[5]: 
/**/conn2.isValid(5);
2025-10-05 13:39:30.810646-05:00 jdbc[5]: 
/**/conn2.getTransactionIsolation();
2025-10-05 13:39:38.023640-05:00 jdbc[12]: 
/**/conn9.isValid(5);
2025-10-05 13:39:38.023640-05:00 jdbc[12]: 
/**/conn9.getTransactionIsolation();
2025-10-05 13:39:40.547074-05:00 jdbc[7]: 
/**/conn4.isValid(5);
2025-10-05 13:39:40.547074-05:00 jdbc[7]: 
/**/conn4.getTransactionIsolation();
2025-10-05 13:40:56.770945-05:00 jdbc[10]: 
/**/conn7.isValid(5);
2025-10-05 13:40:56.771413-05:00 jdbc[10]: 
/**/conn7.getTransactionIsolation();
2025-10-05 13:41:06.983512-05:00 jdbc[6]: 
/**/conn3.isValid(5);
2025-10-05 13:41:06.983512-05:00 jdbc[6]: 
/**/conn3.getTransactionIsolation();
2025-10-05 13:41:07.851960-05:00 jdbc[11]: 
/**/conn8.isValid(5);
2025-10-05 13:41:07.851960-05:00 jdbc[11]: 
/**/conn8.getTransactionIsolation();
2025-10-05 13:41:10.581026-05:00 jdbc[9]: 
/**/conn6.isValid(5);
2025-10-05 13:41:10.581026-05:00 jdbc[9]: 
/**/conn6.getTransactionIsolation();
2025-10-05 13:41:11.647623-05:00 jdbc[4]: 
/**/conn1.isValid(5);
2025-10-05 13:41:11.647623-05:00 jdbc[4]: 
/**/conn1.getTransactionIsolation();
2025-10-05 13:41:13.138423-05:00 jdbc[3]: 
/**/conn0.isValid(5);
2025-10-05 13:41:13.138423-05:00 jdbc[3]: 
/**/conn0.getTransactionIsolation();
2025-10-05 13:41:17.046095-05:00 jdbc[8]: 
/**/conn5.isValid(5);
2025-10-05 13:41:17.046258-05:00 jdbc[8]: 
/**/conn5.getTransactionIsolation();
2025-10-05 13:41:19.176107-05:00 jdbc[5]: 
/**/conn2.isValid(5);
2025-10-05 13:41:19.176107-05:00 jdbc[5]: 
/**/conn2.getTransactionIsolation();
2025-10-05 13:41:33.355913-05:00 jdbc[12]: 
/**/conn9.isValid(5);
2025-10-05 13:41:33.356452-05:00 jdbc[12]: 
/**/conn9.getTransactionIsolation();
2025-10-05 13:41:38.577130-05:00 jdbc[7]: 
/**/conn4.isValid(5);
2025-10-05 13:41:38.577130-05:00 jdbc[7]: 
/**/conn4.getTransactionIsolation();
2025-10-05 13:42:33.845611-05:00 jdbc[10]: 
/**/conn7.isValid(5);
2025-10-05 13:42:33.845611-05:00 jdbc[10]: 
/**/conn7.getTransactionIsolation();
2025-10-05 13:42:49.235033-05:00 jdbc[6]: 
/**/conn3.isValid(5);
2025-10-05 13:42:49.235282-05:00 jdbc[6]: 
/**/conn3.getTransactionIsolation();
2025-10-05 13:42:50.449989-05:00 jdbc[11]: 
/**/conn8.isValid(5);
2025-10-05 13:42:50.450286-05:00 jdbc[11]: 
/**/conn8.getTransactionIsolation();
2025-10-05 13:42:54.577897-05:00 jdbc[9]: 
/**/conn6.isValid(5);
2025-10-05 13:42:54.577897-05:00 jdbc[9]: 
/**/conn6.getTransactionIsolation();
2025-10-05 13:42:55.734399-05:00 database: closing C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management from shutdown hook
2025-10-05 13:42:55.735434-05:00 lock: 3 shared read unlock SYS 
2025-10-05 13:42:55.735434-05:00 database: disconnecting session #3
2025-10-05 13:42:55.735434-05:00 database: disconnected session #3
2025-10-05 13:42:55.735900-05:00 lock: 4 shared read unlock SYS 
2025-10-05 13:42:55.735900-05:00 database: disconnecting session #4
2025-10-05 13:42:55.735900-05:00 database: disconnected session #4
2025-10-05 13:42:55.736546-05:00 lock: 5 shared read unlock SYS 
2025-10-05 13:42:55.736546-05:00 database: disconnecting session #5
2025-10-05 13:42:55.736546-05:00 database: disconnected session #5
2025-10-05 13:42:55.736900-05:00 lock: 6 shared read unlock SYS 
2025-10-05 13:42:55.736900-05:00 database: disconnecting session #6
2025-10-05 13:42:55.736900-05:00 database: disconnected session #6
2025-10-05 13:42:55.737530-05:00 lock: 7 shared read unlock SYS 
2025-10-05 13:42:55.737530-05:00 database: disconnecting session #7
2025-10-05 13:42:55.737530-05:00 database: disconnected session #7
2025-10-05 13:42:55.737901-05:00 lock: 8 shared read unlock SYS 
2025-10-05 13:42:55.737901-05:00 database: disconnecting session #8
2025-10-05 13:42:55.737901-05:00 database: disconnected session #8
2025-10-05 13:42:55.738504-05:00 lock: 9 shared read unlock SYS 
2025-10-05 13:42:55.738504-05:00 database: disconnecting session #9
2025-10-05 13:42:55.739016-05:00 database: disconnected session #9
2025-10-05 13:42:55.739016-05:00 lock: 10 shared read unlock SYS 
2025-10-05 13:42:55.739016-05:00 database: disconnecting session #10
2025-10-05 13:42:55.739016-05:00 database: disconnected session #10
2025-10-05 13:42:55.739698-05:00 lock: 11 shared read unlock SYS 
2025-10-05 13:42:55.739698-05:00 database: disconnecting session #11
2025-10-05 13:42:55.740202-05:00 database: disconnected session #11
2025-10-05 13:42:55.740202-05:00 lock: 12 shared read unlock SYS 
2025-10-05 13:42:55.741197-05:00 database: disconnecting session #12
2025-10-05 13:42:55.741356-05:00 database: closing C:/Users/Joseph/Desktop/Source/Contact_Management_App_Spring_Boot/contact-management-app/data/contact_management
2025-10-05 13:42:55.741698-05:00 lock: 1 exclusive requesting for SYS 
2025-10-05 13:42:55.741698-05:00 lock: 1 exclusive added for SYS 
2025-10-05 13:42:55.753255-05:00 lock: 1 exclusive unlock SYS 
2025-10-05 13:42:55.753255-05:00 lock: 2 shared read unlock SYS 
2025-10-05 13:42:55.754033-05:00 lock: 1 shared read unlock SYS 
2025-10-05 13:42:55.811136-05:00 database: closed
2025-10-05 13:42:55.812573-05:00 jdbc[3]: 
/**/conn0.isClosed();
2025-10-05 13:42:55.819030-05:00 jdbc[3]: 
/**/conn0.close();
2025-10-05 13:42:55.824348-05:00 jdbc[4]: 
/**/conn1.isClosed();
2025-10-05 13:42:55.829850-05:00 jdbc[4]: 
/**/conn1.close();
2025-10-05 13:42:55.836135-05:00 jdbc[5]: 
/**/conn2.isClosed();
2025-10-05 13:42:55.874550-05:00 jdbc[5]: 
/**/conn2.close();
2025-10-05 13:42:55.912719-05:00 jdbc[6]: 
/**/conn3.isClosed();
2025-10-05 13:42:55.921374-05:00 jdbc[6]: 
/**/conn3.close();
2025-10-05 13:42:55.928091-05:00 jdbc[7]: 
/**/conn4.isClosed();
2025-10-05 13:42:55.935839-05:00 jdbc[7]: 
/**/conn4.close();
2025-10-05 13:42:55.943450-05:00 jdbc[8]: 
/**/conn5.isClosed();
2025-10-05 13:42:55.949212-05:00 jdbc[8]: 
/**/conn5.close();
2025-10-05 13:42:55.953724-05:00 jdbc[9]: 
/**/conn6.isClosed();
2025-10-05 13:42:55.960029-05:00 jdbc[9]: 
/**/conn6.close();
2025-10-05 13:42:55.965910-05:00 jdbc[10]: 
/**/conn7.isClosed();
2025-10-05 13:42:55.972411-05:00 jdbc[10]: 
/**/conn7.close();
2025-10-05 13:42:55.982670-05:00 jdbc[11]: 
/**/conn8.isClosed();
2025-10-05 13:42:55.988758-05:00 jdbc[11]: 
/**/conn8.close();
2025-10-05 13:42:55.997333-05:00 jdbc[12]: 
/**/conn9.isClosed();
2025-10-05 13:42:56.004098-05:00 jdbc[12]: 
/**/conn9.close();
